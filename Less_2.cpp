#include <iostream>
#include <cassert>
#include <cmath>
#include <cstdint>

using namespace std;

    ///=====================================================================================================================================================///
   ///PART-1.Создать класс Power,который содержит два вещественных числа.Этот класс должен иметь две переменные-члена для хранения этих вещественных чисел ///
  ///Еще создать два метода: один с именем set, который позволит присваивать значения переменным, второй — calculate, который будет выводить результат    ///
 /// возведения первого числа в степень второго числа. Задать значения этих двух чисел по умолчанию.                                                     ///
/// ====================================================================================================================================================///

class Power
{    
private:

    double numb;
    double power_numb;
    ///Константные типы данных должны быть инициализированы во время объявления.///
        ///Если это константные переменные-члены, то инициализировать их с помощью конструктора нельзя. Для решения этой проблемы используются///
        ///списки инициализации членов. Такой список располагается сразу после параметров конструктора и начинается с двоеточия (:), ///
        /// а затем в круглых скобках указывается значение для каждой переменной. Список инициализаторов не заканчивается точкой с запятой.///
public:
    Power() : numb(0.0), power_numb(0.0) 
    {
        cout << "Power: " << endl;
    }
    Power(double num, double pow_nu) : numb(num), power_numb(pow_nu) 
            {
        cout << "Power: " << endl;
    }
    void set(double num, double pow_nu)
    {
        assert(pow_nu > 0);
        numb = num;
        power_numb = pow_nu;
    }
    ~Power()
    {
    }
    void calculate() 
    {
        cout <<"Result of raising a number " << numb <<" to the power of "  <<  power_numb << " = " << pow(numb, power_numb) << endl;
    }
};
///=============================================================================================================================================///
///PART-2. Написать класс с именем RGBA, который содержит 4 переменные-члена типа std::uint8_t: m_red, m_green, m_blue и m_alpha///
///(#include cstdint для доступа к этому типу). Задать 0 в качестве значения по умолчанию для m_red, m_green, m_blue и 255 для m_alpha.///
///Создать конструктор со списком инициализации членов, который позволит пользователю передавать значения для m_red, m_blue, m_green и m_alpha./// 
///Написать функцию print(), которая будет выводить значения переменных-членов.///
///===========================================================================================================================================///

class RGBA
{
private:

    std::uint8_t m_red;
    std::uint8_t m_green;
    std::uint8_t m_blue;
    std::uint8_t m_alpha;

public:

    RGBA(std::uint8_t red = 0, std::uint8_t green = 0, std::uint8_t blue = 0, std::uint8_t alpha = 255) : m_red{red}, m_green{green}, m_blue{blue}, m_alpha{alpha}
    {
    }
    void print() const
    {
        std::cout << "Red: " << (int)m_red << " Green: " << (int)m_green << " Blue: " << (int)m_blue << " Alpha: " << (int)m_alpha << std::endl;
    }
};

///===========================================================================================================================================///
///PART-3. Написать класс, который реализует функциональность стека.Класс Stack должен иметь :///
///private - массив целых чисел длиной 10;///
///private целочисленное значение для отслеживания длины стека;///
///public - метод с именем reset(), который будет сбрасывать длину и все значения элементов на 0;///
///public - метод с именем push(),который будет добавлять значение в стек.push()должен возвращать значение false,если массив уже заполнен,и true/// 
/// в противном случае;///
///public - метод с именем pop() для вытягивания и возврата значения из стека.Если в стеке нет значений, то должно выводиться предупреждение;///
///public - метод с именем print(), который будет выводить все значения стека.///
///=========================================================================================================================================///

class StackArray 
 
{    
private:
    int Array[10]; ///массив целых чисел длиной 10;///
 
@Semyon25 Semyon25 5 days ago 
В третьем задании число 10 лучше заменить на константу.

@IMihaluch	Reply…
    int length; ///целочисленное значение для отслеживания длины стека;///

public:

    void reset() ///- метод с именем reset(), который будет сбрасывать длину и все значения элементов на 0;///
    {
        length = 0;
        for (int i = 0; i < 10; i++) 
        {
            Array[i] = 0;
        }
    }
    bool push(int value) ///- метод с именем push(), который будет добавлять значение в стек.push() должен возвращать значение false, если массив уже заполнен, и true///
    {
        if (length == 10)
            return false;
        Array[length++] = value;
        return true;
    }
    int pop() ///- метод с именем pop() для вытягивания и возврата значения из стека.Если в стеке нет значений, то должно выводиться предупреждение;///
    {
        if (length == 0) {
            cout << "Stack is empty!" << endl;
        }
        else {
            return Array[--length];
        }
    }
    void print() ///- метод с именем print(), который будет выводить все значения стека.///
    {

        cout << "(";
        for (int i = 0; i < length; i++) 
        {
            cout << Array[i] << " ";
        }
        cout << ")" << endl;
    }
};

int main(const int argc, const char** argv)
{
    cout << endl <<"PART-1. ===================================================" << endl << endl; 
            {
        Power pow1;
        pow1.calculate();
        Power pow2;
        pow2.set(2, 3);
        pow2.calculate();
        Power pow3(3, 7);
        pow3.calculate();
    }


    cout << endl << "PART-2. ===================================================" << endl << endl; 
    {
        RGBA rgb1;
        rgb1.print();
        RGBA rgb2{10, 54, 178, 237};
        rgb2.print();
    }


    cout << endl << "PART-3. ===================================================" << endl << endl; 
    {
        StackArray stack;
        stack.reset();
        stack.print();
        stack.push(3);
        stack.push(7);
        stack.push(5);
        stack.print();

        stack.pop();
        stack.print();

        stack.pop();
        stack.pop();
        stack.print();
    }
    cout << endl;

    return 0;
}
